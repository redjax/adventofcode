{
    // jupyter-fs
    // jupyter-fs:plugin
    // Settings for the jupyter-fs extension.
    // **************************************

    // Options
    // Global options for jupyter-fs
    "options": {
        "cache": true,
        "verbose": false,
        "writtenVersion": "1.0.0"
    },

    // Snippets
    // A list of usage snippets
    "snippets": [
        {
            "label": "Read CSV as dataframe",
            "caption": "Read the contents of this CSV file as a pandas DataFrame",
            "pattern": "\\.csv$",
            "template": "# uses https://docs.pyfilesystem.org/en/latest/reference/base.html#fs.base.FS.openbin \nfrom jupyterfs import open_fs\nimport pandas\nwith open_fs(\"{{url}}\") as fs_instance:\n    df = pandas.read_csv(fs_instance.openbin(\"{{path}}\"))"
        },
        {
            "label": "Read contents",
            "caption": "Read the contents of this file with PyFilesystem",
            "pattern": "^(?!osfs://)(.*/)?[^/]+$",
            "template": "# uses https://docs.pyfilesystem.org/en/latest/reference/base.html#fs.base.FS.readbytes \nfrom jupyterfs import open_fs\nwith open_fs(\"{{url}}\") as fs_instance:\n    contents = fs_instance.readbytes(\"{{path}}\")"
        },
        {
            "label": "Read contents (local)",
            "caption": "Read the contents of this local file",
            "pattern": "^(?=osfs://)(.*/)?[^/]+$",
            "template": "import pathlib;\ncontents = pathlib.Path(\"{{path}}\").read_bytes()"
        },
        {
            "label": "Read text",
            "caption": "Read the contents of this file as text with PyFilesystem",
            "pattern": "^(?!osfs://)(.*/)?[^/]+$",
            "template": "# uses https://docs.pyfilesystem.org/en/latest/reference/base.html#fs.base.FS.readtext \nfrom jupyterfs import open_fs\nwith open_fs(\"{{url}}\") as fs_instance:\n    contents = fs_instance.readtext(\"{{path}}\")"
        },
        {
            "label": "List directory contents",
            "caption": "List the entries of this directory with PyFilesystem",
            "pattern": "^.*/$",
            "template": "# uses https://docs.pyfilesystem.org/en/latest/reference/base.html#fs.base.FS.listdir \nfrom jupyterfs import open_fs\nwith open_fs(\"{{url}}\") as fs_instance:\n    entries = fs_instance.listdir(\"{{path}}\")"
        },
        {
            "label": "Read Excel as dataframe",
            "caption": "Read the contents of this Excel file as a pandas DataFrame",
            "pattern": "\\.(xls|xlsx|xlsm|xlsb)$",
            "template": "# uses https://docs.pyfilesystem.org/en/latest/reference/base.html#fs.base.FS.open \nfrom jupyterfs import open_fs\nimport pandas\nwith open_fs(\"{{url}}\") as fs_instance:\n    df = pandas.read_excel(fs_instance.open(\"{{path}}\", mode=\"rb\"))"
        },
        {
            "label": "Write dataframe as CSV",
            "caption": "Save a pandas DF from the session to the given CSV file with PyFilesystem",
            "pattern": "\\.csv$",
            "template": "# uses https://docs.pyfilesystem.org/en/latest/reference/base.html#fs.base.FS.writetext \nfrom jupyterfs import open_fs\nwith open_fs(\"{{url}}\") as fs_instance:\n    fs_instance.writetext(\"{{path}}\", YOUR_DF_VARIABLE.to_csv())"
        },
        {
            "label": "Write contents",
            "caption": "Write the given contents (bytes) to the specified file with PyFilesystem",
            "pattern": "^(?!osfs://)(.*/)?[^/]+$",
            "template": "# uses https://docs.pyfilesystem.org/en/latest/reference/base.html#fs.base.FS.writebytes \nfrom jupyterfs import open_fs\nwith open_fs(\"{{url}}\") as fs_instance:\n    fs_instance.writebytes(\"{{path}}\", YOUR_BYTES_CONTENT)"
        },
        {
            "label": "Write contents (local)",
            "caption": "Write the contents to this local file",
            "pattern": "^(?=osfs://)(.*/)?[^/]+$",
            "template": "import pathlib;\ncontents = pathlib.Path(\"{{path}}\").write_bytes(YOUR_BYTES_CONTENT)"
        },
        {
            "label": "Write text",
            "caption": "Write the given text to the specified file with PyFilesystem",
            "pattern": "^(?!osfs://)(.*/)?[^/]+$",
            "template": "# uses https://docs.pyfilesystem.org/en/latest/reference/base.html#fs.base.FS.writetext \nfrom jupyterfs import open_fs\nwith open_fs(\"{{url}}\") as fs_instance:\n    fs_instance.writetext(\"{{path}}\", YOUR_TEXT_CONTENT)"
        }
    ]
}